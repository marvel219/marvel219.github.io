[{"id":"7c3a6f7ad545b7833c547c40303b5d4d","title":"网络爬虫/相关工具与知识","content":"网络爬虫网络爬虫(web crawler), 以前经常称为网络蜘蛛(spider), 是按照一定的规则自动浏览万维网并获取信息的机器人程序(或叫脚本), 曾经被广泛的应用于互联网搜索引擎.使用过互联网和浏览器的人都知道, 网页中除了提供用户阅读的文字信息之外, 还包含一些超链接. 网络爬虫系统正是通过网页中的超链接信息不断获得网络上的其他页面. 正因为如此, 网络数据采集的过程就像一个爬虫或者蜘蛛在网络上漫游, 所有才被形象的称之为网络爬虫或者网络蜘蛛.\n爬虫的应用领域在理想的状态下, 所有的ICP(internet Content Provider) 都应该为自己的网络提供API接口来共享它们允许其他程序获取的数据, 在这种情况下爬虫就不是必需品, 国内比较有名的电商平台(如淘宝, 京东等), 社交平台(如QQ&#x2F;微博&#x2F;微信等)这些网站都提供了自己的Open Api, 但是这类Open Api通常会对可以抓取的数据频率进行限制. 对于大多数的公司而言, 计时的获取行业相关数据就是企业生存的重要环节之一, 然而大部分企业在行业数据方面的匮乏是其与生俱来的短板, 合理的利用爬虫来获取数据并从中提取出有价值的信息是至关重要的. 当然爬虫还有很多重要的应用灵玉, 以下列举了其中一部分.\n1. 搜索引擎\n2. 新闻聚合\n3. 社交应用\n4. 舆情监控\n5. 行业数据\nRbots.txt文件大多数网站都会定义robots.txt文件, 下面以淘宝的robots.txt文件为例, 看看该网站对爬虫有哪些限制\n$User-agent:  Baiduspider\nAllow:  /article\nAllow:  /oshtml\nDisallow:  /product/\nDisallow:  /\n\nUser-Agent:  Googlebot\nAllow:  /article\nAllow:  /oshtml\nAllow:  /product\nAllow:  /spu\nAllow:  /dianpu\nAllow:  /oversea\nAllow:  /list\nDisallow:  /\n\nUser-agent:  Bingbot\nAllow:  /article\nAllow:  /oshtml\nAllow:  /product\nAllow:  /spu\nAllow:  /dianpu\nAllow:  /oversea\nAllow:  /list\nDisallow:  /\n\nUser-Agent:  360Spider\nAllow:  /article\nAllow:  /oshtml\nDisallow:  /\n\nUser-Agent:  Yisouspider\nAllow:  /article\nAllow:  /oshtml\nDisallow:  /\n\nUser-Agent:  Sogouspider\nAllow:  /article\nAllow:  /oshtml\nAllow:  /product\nDisallow:  /\n\nUser-Agent:  Yahoo!  Slurp\nAllow:  /product\nAllow:  /spu\nAllow:  /dianpu\nAllow:  /oversea\nAllow:  /list\nDisallow:  /\n\nUser-Agent:  *\nDisallow:  /\n注意上面robots.txt第一段的最后一行, 通过设置’Disallow:&#x2F;’禁止百度爬虫访问除了’Allow’规定页面外的其他所有页面. 因此当你在百度搜索’淘宝’的时候, 搜索结果下方会出现: ‘由于该网站的rebots.txt文件存在限制指令(限制搜索引擎抓取). 系统无法提供该页面的内容描述.’, 百度作为一个搜索引擎, 至少在表面上遵守了淘宝网的robots.txt协议, 所以用户不能从百度上搜索到淘宝内部的产品信息.\n相关工具介绍在开始讲解爬虫之前，我们稍微对HTTP（超文本传输协议）做一些回顾，因为我们在网页上看到的内容通常是浏览器执行HTML语言得到的结果，而HTTP就是传输HTML数据的协议。HTTP是构建于TCP（传输控制协议）之上应用级协议，它利用了TCP提供的可靠的传输服务实现了Web应用中的数据交换。按照维基百科上的介绍，设计HTTP最初的目的是为了提供一种发布和接收HTML页面的方法，也就是说这个协议是浏览器和Web服务器之间传输的数据的载体。关于这个协议的详细信息以及目前的发展状况，大家可以阅读阮一峰老师的《HTTP 协议入门》、《互联网协议入门》系列以及《图解HTTPS协议》进行了解，下图是我在2009年9月10日凌晨4点在四川省网络通信技术重点实验室用开源协议分析工具Ethereal（抓包工具WireShark的前身）截取的访问百度首页时的HTTP请求和响应的报文（协议数据），由于Ethereal截取的是经过网络适配器的数据，因此可以清晰的看到从物理链路层到应用层的协议数据。\n相关工具1.Chrome Developer Tools\n开发推荐使用谷歌浏览器, 这是谷歌的开发者工具\n2.HTTPie\n$ http --header http://www.scu.edu.cn\nHTTP/1.1 200 OK\nAccept-Ranges: bytes\nCache-Control: private, max-age=600\nConnection: Keep-Alive\nContent-Encoding: gzip\nContent-Language: zh-CN\nContent-Length: 14403\nContent-Type: text/html\nDate: Sun, 27 May 2018 15:38:25 GMT\nETag: \"e6ec-56d3032d70a32-gzip\"\nExpires: Sun, 27 May 2018 15:48:25 GMT\nKeep-Alive: timeout=5, max=100\nLast-Modified: Sun, 27 May 2018 13:44:22 GMT\nServer: VWebServer\nVary: User-Agent,Accept-Encoding\nX-Frame-Options: SAMEORIGIN\n3.BuiltWith(python自带的模块): 识别网站使用的技术\n>>>\n>>> import builtwith\n>>> builtwith.parse('http://www.bootcss.com/')\n&#123;'web-servers': ['Nginx'], 'font-scripts': ['Font Awesome'], 'javascript-frameworks': ['Lo-dash', 'Underscore.js', 'Vue.js', 'Zepto', 'jQuery'], 'web-frameworks': ['Twitter Bootstrap']&#125;\n\n>>>\n>>> import ssl\n>>> ssl._create_default_https_context = ssl._create_unverified_context\n>>> builtwith.parse('https://www.jianshu.com/')\n&#123;'web-servers': ['Tengine'], 'web-frameworks': ['Twitter Bootstrap', 'Ruby on Rails'], 'programming-languages': ['Ruby']&#125;\n\n4.robotparser: 解析robots.txt的工具\n>>> from urllib import robotparser\n>>> parser = robotparser.RobotFileParser()\n>>> parser.set_url('https://www.taobao.com/robots.txt')\n>>> parser.read()\n>>> parser.can_fetch('Hellokitty', 'http://www.taobao.com/article')\nFalse\n>>> parser.can_fetch('Baiduspider', 'http://www.taobao.com/article')\nTrue\n>>> parser.can_fetch('Baiduspider', 'http://www.taobao.com/product')\nFalse","slug":"newpaper","date":"2022-05-30T08:49:18.000Z","categories_index":"","tags_index":"网络爬虫","author_index":"Aurora"},{"id":"b9663f58f18133b35bfe243f3e916a80","title":"Hello World","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new \"My New Post\"\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n","slug":"hello-world","date":"2022-05-07T08:37:49.618Z","categories_index":"","tags_index":"test,hello world","author_index":"Aurora"}]